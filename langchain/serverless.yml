service: langchain-app

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 1024
  timeout: 30
  environment:
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    DEPLOYMENT_ENV: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
      Resource: !GetAtt ChatHistoryTable.Arn

functions:
  api:
    handler: app.lambda_handler
    events:
      - http:
          path: query
          method: post
          cors: true
      - http:
          path: chat
          method: post
          cors: true

resources:
  Resources:
    ChatHistoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: langchain-chat-history-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: session_id
            AttributeType: S
        KeySchema:
          - AttributeName: session_id
            KeyType: HASH

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    zip: true